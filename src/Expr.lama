-- Expression evaluator

import List;
import State;


-- The evaluator itself: takes a state and an expression,
-- returns integer value
public fun evalExpr (st, expr) {
case expr of
	Var (x) -> st (x)
	| Const (n) -> n
	| Binop (op, l, r) -> evalOp (op, evalExpr (st, l), evalExpr (st, r))
esac
}

public fun evalOp (op, l, r) {
case op of
	"+" -> l + r
	| "-" -> l - r
	| "*" -> l * r
	| "/" -> l / r
	| "%" -> l % r
	| "==" -> l == r
	| "!=" -> l != r
	| "<" -> l < r
	| "<=" -> l <= r
	| ">" -> l > r
	| ">=" -> l >= r
	| "&&" -> l && r
	| "!!" -> l !! r
esac
}
